{"version":3,"file":"component---src-pages-index-js-2d5beaa2a7bda1798d39.js","mappings":"gJA6JMA,G,SAAsBC,EAAAA,EAAAA,SAAOC,EAAAA,IAAKC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAZJ,CAAY,6BAsBxC,UAlBkB,SAAHK,GAAA,IAAMC,EAAQD,EAARC,SAAUC,EAAIF,EAAJE,KAAI,OACjCC,EAAAA,cAACC,EAAAA,GAAM,CAACH,SAAUA,GAChBE,EAAAA,cAACT,EAAmB,CAACW,UAAU,cAC7BF,EAAAA,cAACG,EAAAA,GAAI,CAACJ,KAAMA,EAAKK,KAAKC,QACtBL,EAAAA,cAACM,EAAAA,GAAK,CAACP,KAAMA,EAAKQ,MAAMF,QACxBL,EAAAA,cAACQ,EAAAA,GAAI,CAACT,KAAMA,EAAKU,KAAKJ,QACtBL,EAAAA,cAACU,EAAAA,GAAQ,CAACX,KAAMA,EAAKY,SAASN,QAC9BL,EAAAA,cAACY,EAAAA,GAAQ,CAACb,KAAMA,EAAKc,SAASR,QAC9BL,EAAAA,cAACc,EAAAA,GAAO,CAACf,KAAMA,EAAKgB,QAAQV,SAEvB,C","sources":["webpack://v2/./src/pages/index.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Layout, Hero, About, Jobs, Featured, Projects, Contact } from '@components';\nimport styled from 'styled-components';\nimport { Main } from '@styles';\nimport { useLanguage,LanguageProvider, LanguageContext } from '@styles/LanguageContext'; \n\n\n// const StyledMainContainer = styled(Main)`\n//   counter-reset: section;\n// `;\n\n// const IndexContent = ({ data }) => {\n//   // const { language } = useContext(LanguageContext);\n//   // console.log(\"Language in IndexContent:\", language);\n//   // console.log(\"data\", data)\n\n//   return (\n//     <Layout location={location}>\n//       <StyledMainContainer className=\"fillHeight\">\n//         <Hero data={data.hero.edges} />\n//         <About data={data.about.edges} />\n//         <Jobs data={data.jobs.edges} />\n//         <Featured data={data.featured.edges} />\n//         <Projects data={data.projects.edges} />\n//         <Contact data={data.contact.edges} />\n//       </StyledMainContainer>\n//     </Layout>\n//   );\n// };\n\n// const IndexPage = ({ location, data }) => {\n//   console.log(\"data in page\",data )\n//   return (\n//     // <LanguageProvider>\n//       <IndexContent location={location}  data={data} />\n//     // {/* </LanguageProvider> */}\n//   );\n// };\n\n\n\n// IndexPage.propTypes = {\n//   location: PropTypes.object.isRequired,\n//   data: PropTypes.object.isRequired,\n// };\n\n// export default IndexPage;\n\n\n// export const pageQuery = graphql`\n// {\n//     hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\n//       edges {\n//         node {\n//           frontmatter {\n//             title\n//             name\n//             subtitle\n//             buttonText\n//           }\n//           html\n//         }\n//       }\n//     }\n//     about: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\n//       edges {\n//         node {\n//           frontmatter {\n//             title\n//             avatar {\n//               childImageSharp {\n//                 fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n//                   ...GatsbyImageSharpFluid_withWebp_tracedSVG\n//                 }\n//               }\n//             }\n//             skills\n//           }\n//           html\n//         }\n//       }\n//     }\n//     jobs: allMarkdownRemark(\n//       filter: { fileAbsolutePath: { regex: \"/jobs/\" } }\n//       sort: { fields: [frontmatter___date], order: DESC }\n//     ) {\n//       edges {\n//         node {\n//           frontmatter {\n//             title\n//             company\n//             range\n//             url\n//           }\n//           html\n//         }\n//       }\n//     }\n//     featured: allMarkdownRemark(\n//       filter: { fileAbsolutePath: { regex: \"/featured/\" } }\n//       sort: { fields: [frontmatter___date], order: DESC }\n//     ) {\n//       edges {\n//         node {\n//           frontmatter {\n//             title\n//             cover {\n//               childImageSharp {\n//                 fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n//                   ...GatsbyImageSharpFluid_withWebp_tracedSVG\n//                 }\n//               }\n//             }\n//             tech\n//             github\n//             external\n//           }\n//           html\n//         }\n//       }\n//     }\n//     projects: allMarkdownRemark(\n//       filter: {\n//         fileAbsolutePath: { regex: \"/projects/\" }\n//         frontmatter: { showInProjects: { ne: false } }\n//       }\n//       sort: { fields: [frontmatter___date], order: DESC }\n//     ) {\n//       edges {\n//         node {\n//           frontmatter {\n//             title\n//             tech\n//             github\n//             external\n//           }\n//           html\n//         }\n//       }\n//     }\n//     contact: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/contact/\" } }) {\n//       edges {\n//         node {\n//           frontmatter {\n//             title\n//             buttonText\n//           }\n//           html\n//         }\n//       }\n//     }\n//   }\n// `;\n\n\nconst StyledMainContainer = styled(Main)`\n  counter-reset: section;\n`;\n\nconst IndexPage = ({ location, data }) => (\n  <Layout location={location}>\n    <StyledMainContainer className=\"fillHeight\">\n      <Hero data={data.hero.edges} />\n      <About data={data.about.edges} />\n      <Jobs data={data.jobs.edges} />\n      <Featured data={data.featured.edges} />\n      <Projects data={data.projects.edges} />\n      <Contact data={data.contact.edges} />\n    </StyledMainContainer>\n  </Layout>\n);\n\nIndexPage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  {\n    hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            name\n            subtitle\n            buttonText\n          }\n          html\n        }\n      }\n    }\n    about: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            avatar {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            skills\n          }\n          html\n        }\n      }\n    }\n    jobs: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/jobs/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            company\n            range\n            url\n          }\n          html\n        }\n      }\n    }\n    featured: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/featured/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            tech\n            github\n            external\n          }\n          html\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/projects/\" }\n        frontmatter: { showInProjects: { ne: false } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            tech\n            github\n            external\n          }\n          html\n        }\n      }\n    }\n    contact: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/contact/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            buttonText\n          }\n          html\n        }\n      }\n    }\n  }\n`;"],"names":["StyledMainContainer","styled","Main","withConfig","displayName","componentId","_ref","location","data","React","Layout","className","Hero","hero","edges","About","about","Jobs","jobs","Featured","featured","Projects","projects","Contact","contact"],"sourceRoot":""}