{"version":3,"file":"component---src-pages-index-js-bacbcf44d9bbde44ab73.js","mappings":"0JAUMA,GAAsBC,EAAAA,EAAAA,SAAOC,EAAAA,IAAKC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAZJ,CAAY,4BAclCK,EAAe,SAAHC,GAA4B,IAAtBC,EAAQD,EAARC,SAAUC,EAAIF,EAAJE,KACxBC,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,IAAxBF,SAEFG,EAAoBJ,EAAKK,KAAKC,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,OAASV,CAAQ,IAC1FW,EAAqBZ,EAAKa,MAAMP,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,OAASV,CAAQ,IAC5Fa,EAAoBd,EAAKe,KAAKT,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,OAASV,CAAQ,IAC1Fe,EAAwBhB,EAAKiB,SAASX,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,OAASV,CAAQ,IAClGiB,EAAwBlB,EAAKmB,SAASb,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,OAASV,CAAQ,IAClGmB,EAAuBpB,EAAKqB,QAAQf,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,OAASV,CAAQ,IAEtG,OACEqB,EAAAA,cAACC,EAAAA,GAAM,CAACxB,SAAUA,GAChBuB,EAAAA,cAAC/B,EAAmB,CAACiC,UAAU,cAC7BF,EAAAA,cAACG,EAAAA,GAAI,CAACzB,KAAMI,IACZkB,EAAAA,cAACI,EAAAA,GAAK,CAAC1B,KAAMY,IACbU,EAAAA,cAACK,EAAAA,GAAI,CAAC3B,KAAMc,IACZQ,EAAAA,cAACM,EAAAA,GAAQ,CAAC5B,KAAMgB,IAChBM,EAAAA,cAACO,EAAAA,GAAQ,CAAC7B,KAAMkB,IAChBI,EAAAA,cAACQ,EAAAA,GAAO,CAAC9B,KAAMoB,KAIvB,EAYA,UA1CkB,SAAHW,GAA4B,IAAtBhC,EAAQgC,EAARhC,SAAUC,EAAI+B,EAAJ/B,KAC7B,OACEsB,EAAAA,cAACU,EAAAA,GAAgB,KACfV,EAAAA,cAACzB,EAAY,CAACE,SAAUA,EAAUC,KAAMA,IAG9C,C","sources":["webpack://v2/./src/pages/index.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Layout, Hero, About, Jobs, Featured, Projects, Contact } from '@components';\nimport styled from 'styled-components';\nimport { Main } from '@styles';\nimport { useLanguage,LanguageProvider, LanguageContext } from '@styles/LanguageContext'; \n\n\n\nconst StyledMainContainer = styled(Main)`\n  counter-reset: section;\n`;\n\n\n\nconst IndexPage = ({ location, data }) => {\n  return (\n    <LanguageProvider>\n      <IndexContent location={location} data={data} />\n    </LanguageProvider>\n  );\n};\n\nconst IndexContent = ({ location, data }) => {\n  const { language } = useContext(LanguageContext);\n\n  const filteredHeroEdges = data.hero.edges.filter(edge => edge.node.frontmatter.lang === language);\n  const filteredAboutEdges = data.about.edges.filter(edge => edge.node.frontmatter.lang === language);\n  const filteredJobsEdges = data.jobs.edges.filter(edge => edge.node.frontmatter.lang === language);\n  const filteredFeaturedEdges = data.featured.edges.filter(edge => edge.node.frontmatter.lang === language);\n  const filteredProjectsEdges = data.projects.edges.filter(edge => edge.node.frontmatter.lang === language);\n  const filteredContactEdges = data.contact.edges.filter(edge => edge.node.frontmatter.lang === language);\n\n  return (\n    <Layout location={location}>\n      <StyledMainContainer className=\"fillHeight\">\n        <Hero data={filteredHeroEdges} />\n        <About data={filteredAboutEdges} />\n        <Jobs data={filteredJobsEdges} />\n        <Featured data={filteredFeaturedEdges} />\n        <Projects data={filteredProjectsEdges} />\n        <Contact data={filteredContactEdges} />\n      </StyledMainContainer>\n    </Layout>\n  );\n};\n\nIndexContent.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nIndexPage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n{\n  hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\n    edges {\n      node {\n        frontmatter {\n          title\n          name\n          lang\n          subtitle\n          buttonText\n        }\n        html\n      }\n    }\n  }\n    about: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            lang\n            avatar {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            skills\n          }\n          html\n        }\n      }\n    }\n    jobs: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/jobs/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            lang\n            company\n            range\n            url\n          }\n          html\n        }\n      }\n    }\n    featured: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/featured/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            lang\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            tech\n            github\n            external\n          }\n          html\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/projects/\" }\n        frontmatter: { showInProjects: { ne: false } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            tech\n            lang\n            github\n            external\n          }\n          html\n        }\n      }\n    }\n    contact: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/contact/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            lang\n            buttonText\n          }\n          html\n        }\n      }\n    }\n  }\n`;"],"names":["StyledMainContainer","styled","Main","withConfig","displayName","componentId","IndexContent","_ref2","location","data","language","useContext","LanguageContext","filteredHeroEdges","hero","edges","filter","edge","node","frontmatter","lang","filteredAboutEdges","about","filteredJobsEdges","jobs","filteredFeaturedEdges","featured","filteredProjectsEdges","projects","filteredContactEdges","contact","React","Layout","className","Hero","About","Jobs","Featured","Projects","Contact","_ref","LanguageProvider"],"sourceRoot":""}